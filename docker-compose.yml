version: '3.8'
services:
  frontend:
    build:
      context: ./frontend
      target: development
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    stdin_open: true
    tty: true

  user-service:
    build:
      context: ./backend/user-services
      dockerfile: Dockerfile
      target: development
    volumes:
      - ./backend/user-services:/app
      - /app/node_modules
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DB_CONNECTION=mongodb://mongodb/userService
  trip-service:
    build:
      context: ./backend/trip-services
      dockerfile: Dockerfile
      target: development
    volumes:
      - ./backend/trip-services:/app
      - /app/node_modules
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - DB_CONNECTION=mongodb://mongodb/tripService
      - USER_SERVICE_URL=http://user-service:3001
  mongodb:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongodbdata:/data/db

volumes:
  mongodbdata:

#Dev en
#Simply run docker-compose up to start your development environment. Docker Compose will use docker-compose.yml by default.

#Production Environment:
#To start your production environment, you can use both the base file and the production override:
#docker-compose -f docker-compose.yml -f docker-compose.prod.yml up
